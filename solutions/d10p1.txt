@name Advent of Code/D10P1
@persist [LoopLength Loaded Found]:number [StartPos CurPos]:vector2 [Lines]:array [EnterDir]:string
@strict

interval(10)

event fileLoaded(_:string, Data:string) {
    Lines = Data:explode("\n")
    StartPos = vec2()
    Found = 0

    foreach(I:number, Line:string = Lines) {
        StartPos = StartPos:setX(Line:find("S"))
        
        if (StartPos:x()) {
            Lines[I, string] = Line:replace("S", "L")
            StartPos = StartPos:setY(I)
            break
        } 
    }

    CurPos = StartPos
    LoopLength = 0
    EnterDir = "top"
    Loaded = 1       
}

if (first()) {
    fileLoad("advent_of_code/d10.txt")

} elseif (Loaded) {
    while (!Found & perf(75)) {
        local Instruction = Lines[CurPos:y(), string][CurPos:x()]
        Lines[CurPos:y(), string] = Lines[CurPos:y(), string]:sub(1, CurPos:x() - 1) + "#" +  Lines[CurPos:y(), string]:sub(CurPos:x() + 1)
        
        if (Instruction == "|") {
            if (EnterDir == "top") {CurPos += vec2(0, 1)}
            elseif (EnterDir == "bottom") {CurPos += vec2(0, -1)}
            
        } elseif (Instruction == "-") {
            if (EnterDir == "left") {CurPos += vec2(1, 0)}
            elseif (EnterDir == "right") {CurPos += vec2(-1, 0)}
            
        } elseif (Instruction == "L") {
            if (EnterDir == "top") {CurPos += vec2(1, 0) EnterDir = "left"}
            elseif (EnterDir == "right") {CurPos += vec2(0, -1) EnterDir = "bottom"}
            
        } elseif (Instruction == "J") {
            if (EnterDir == "top") {CurPos += vec2(-1, 0) EnterDir = "right"}
            elseif (EnterDir == "left") {CurPos += vec2(0, -1) EnterDir = "bottom"}
            
        } elseif (Instruction == "7") {
            if (EnterDir == "bottom") {CurPos += vec2(-1, 0) EnterDir = "right"}
            elseif (EnterDir == "left") {CurPos += vec2(0, 1) EnterDir = "top"}
            
        } elseif (Instruction == "F") {
            if (EnterDir == "bottom") {CurPos += vec2(1, 0) EnterDir = "left"}
            elseif (EnterDir == "right") {CurPos += vec2(0, 1) EnterDir = "top"}
        }

        if (CurPos == StartPos) {Found = 1 Loaded = 0}
        LoopLength++

    }
    
    if (Found) {print(ceil(LoopLength / 2)) selfDestruct()}    
    
}
